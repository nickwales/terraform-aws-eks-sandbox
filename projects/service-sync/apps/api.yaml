apiVersion: v1
kind: ServiceAccount
metadata:
  name: api
---
apiVersion: v1
kind: Service
metadata:
  name: api
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "internal" 
spec:
  selector:
    app: api
  ports:
    - port: 9090
      targetPort: 9090  
  type: LoadBalancer        
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: nicholasjackson/fake-service:v0.25.2
          ports:
            - containerPort: 9090
          env:
            - name: 'LISTEN_ADDR'
              value: '0.0.0.0:9090'
            - name: 'NAME'
              value: 'api - running in EKS'
            - name: 'MESSAGE'
              value: 'I have an nginx ingress'
            - name: 'UPSTREAM_URIS'
              value: "http://database.service.consul:9090"

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-api
# spec:
#   ingressClassName: nginx    
#   rules:
#   - host: api.service.consul
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: api
#             port:
#               number: 80


# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     kubernetes.io/ingress.class: alb
#     alb.ingress.kubernetes.io/scheme: internal
#     alb.ingress.kubernetes.io/target-type: instance
#     alb.ingress.kubernetes.io/load-balancer-name: service-sync-ingress
#     alb.ingress.kubernetes.io/backend-protocol: HTTP
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'    
#     # load balancer priority, lower numbers are evaluated first
#     # https://docs.aws.amazon.com/elasticloadbalancing/latest/application/listener-update-rules.html#update-rule-priority
#     # alb.ingress.kubernetes.io/group.order: "10"
#     # alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30" # in seconds
#     # alb.ingress.kubernetes.io/healthcheck-path: /health
#     # alb.ingress.kubernetes.io/healty-threshold-count: "1"
#     # alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
#     # alb.ingress.kubernetes.io/unhealthy-threshold-count: "3"
#     # alb.ingress.kubernetes.io/scheme: internal
#     # alb.ingress.kubernetes.io/target-type: instance
#     # alb.ingress.kubernetes.io/group.name: internal-ingress
#   name: api
# spec:
#   rules:
#     - host: api.service.consul
#       http:
#         paths:
#           - backend:
#               service:
#                 name: api
#                 port:
#                   number: 9090
#             path: /
#             pathType: Prefix  
